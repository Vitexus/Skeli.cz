name: Deploy Skeli.cz

on:
  push:
    branches:
      - main
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Detect Jetty-related changes
        id: jetty_changes
        run: |
          git fetch origin ${GITHUB_REF##*/}
          CHANGED_FILES=$(git diff --name-only HEAD origin/${GITHUB_REF##*/} || true)

          echo "Changed files:"
          echo "$CHANGED_FILES"

          if echo "$CHANGED_FILES" | grep -E '(\.war$|WEB-INF|pom\.xml|src/main)' >/dev/null; then
            echo "restart_needed=true" >> $GITHUB_OUTPUT
          else
            echo "restart_needed=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy via SSH
        env:
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          RESTART_NEEDED: ${{ steps.jetty_changes.outputs.restart_needed }}
        run: |
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            APP_NAME="test.skeli.cz"
          elif [ "${GITHUB_REF##*/}" = "production" ]; then
            APP_NAME="www.skeli.cz"
          else
            echo "❌ Unknown branch: ${GITHUB_REF##*/}"
            exit 1
          fi

          WAR_FILE="${APP_NAME}.war"
          echo "Building WAR for ${APP_NAME}..."

          # Build Java project (pokud používáš Maven)
          if [ -f pom.xml ]; then
            mvn -B clean package -DskipTests
            cp target/*.war $WAR_FILE
          fi

          echo "Uploading $WAR_FILE to $DEPLOY_HOST..."
          scp -o StrictHostKeyChecking=no $WAR_FILE $DEPLOY_USER@$DEPLOY_HOST:/tmp/$WAR_FILE

          echo "Deploying to Jetty..."
          ssh $DEPLOY_USER@$DEPLOY_HOST "
            set -e
            sudo cp /tmp/$WAR_FILE /var/lib/jetty9/webapps/$WAR_FILE
            rm /tmp/$WAR_FILE
            if [ '$RESTART_NEEDED' = 'true' ]; then
              echo 'Restarting Jetty...'
              sudo systemctl restart jetty9
            else
              echo 'Jetty restart not required.'
            fi
            sudo systemctl reload apache2
          "
